{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","reorderedGoods","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","Error","reverse","getReorderedGoods","checkForReset","handleSortType","type","className","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAlCD,SACLC,EACAL,EACAE,GAEA,IAAMI,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQT,GACN,KAAML,EAASe,SACb,OAAOF,EAAGG,cAAcF,GAE1B,KAAMd,EAASiB,OACb,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,KAAMlB,EAASI,KACb,OAAO,EAET,QACE,MAAM,IAAIe,MAAM,2BAIlBZ,GACFI,EAAaS,UAGRT,EAOgBU,CACrBpB,EACAI,EACAE,GAGIe,EAAgBf,GAAcF,IAAaL,EAASI,KAEpDmB,EAAiB,SAACC,GACtBlB,EAAYkB,IAYd,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWC,IAAG,iBACZ,CAAE,WAAYrB,IAAaL,EAASe,WACtCY,QAAS,WACPJ,EAAevB,EAASe,WAL5B,iCAWA,wBACES,KAAK,SACLC,UAAWC,IAAG,oBACZ,CAAE,WAAYrB,IAAaL,EAASiB,SACtCU,QAAS,WACPJ,EAAevB,EAASiB,SAL5B,4BAWA,wBACEO,KAAK,SACLC,UAAWC,IAAG,oBACZ,CAAE,YAAanB,IACjBoB,QAtCQ,WACdnB,GAAeD,IAiCX,qBASCe,GACC,wBACEE,KAAK,SACLC,UAAU,4BACVE,QA3CI,WACZrB,EAAYN,EAASI,MACrBI,GAAc,IAsCR,sBAUJ,6BACGC,EAAemB,KAAI,SAACC,GAAD,OAClB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC7HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.05051c73.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case (SortType.ALPHABET):\n        return g1.localeCompare(g2);\n\n      case (SortType.LENGTH):\n        return g1.length - g2.length;\n\n      case (SortType.NONE):\n        return 0;\n\n      default:\n        throw new Error('Not valid sort type');\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  const checkForReset = isReversed || sortType !== SortType.NONE;\n\n  const handleSortType = (type: SortType) => {\n    setSortType(type);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n          onClick={() => {\n            handleSortType(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={() => {\n            handleSortType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {checkForReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {reorderedGoods.map((good) => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}